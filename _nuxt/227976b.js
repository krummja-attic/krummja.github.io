(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{279:function(t,e,n){var h=n(3),l=n(280),r=n(70);h({target:"Array",proto:!0},{fill:l}),r("fill")},280:function(t,e,n){"use strict";var h=n(22),l=n(72),r=n(11);t.exports=function(t){for(var e=h(this),n=r(e.length),o=arguments.length,c=l(o>1?arguments[1]:void 0,n),_=o>2?arguments[2]:void 0,f=void 0===_?n:l(_,n);f>c;)e[c++]=t;return e}},338:function(t,e,n){"use strict";n.d(e,"a",(function(){return z}));const h=Math.pow(2,-52),l=new Uint32Array(512);class r{static from(t,e=x,n=w){const h=t.length,l=new Float64Array(2*h);for(let i=0;i<h;i++){const p=t[i];l[2*i]=e(p),l[2*i+1]=n(p)}return new r(l)}constructor(t){const e=t.length>>1;if(e>0&&"number"!=typeof t[0])throw new Error("Expected coords to contain numbers.");this.coords=t;const n=Math.max(2*e-5,0);this._triangles=new Uint32Array(3*n),this._halfedges=new Int32Array(3*n),this._hashSize=Math.ceil(Math.sqrt(e)),this._hullPrev=new Uint32Array(e),this._hullNext=new Uint32Array(e),this._hullTri=new Uint32Array(e),this._hullHash=new Int32Array(this._hashSize).fill(-1),this._ids=new Uint32Array(e),this._dists=new Float64Array(e),this.update()}update(){const{coords:t,_hullPrev:e,_hullNext:n,_hullTri:l,_hullHash:r}=this,c=t.length>>1;let f=1/0,m=1/0,x=-1/0,w=-1/0;for(let i=0;i<c;i++){const e=t[2*i],n=t[2*i+1];e<f&&(f=e),n<m&&(m=n),e>x&&(x=e),n>w&&(w=n),this._ids[i]=i}const v=(f+x)/2,T=(m+w)/2;let A,M,k,$=1/0;for(let i=0;i<c;i++){const e=o(v,T,t[2*i],t[2*i+1]);e<$&&(A=i,$=e)}const S=t[2*A],P=t[2*A+1];$=1/0;for(let i=0;i<c;i++){if(i===A)continue;const e=o(S,P,t[2*i],t[2*i+1]);e<$&&e>0&&(M=i,$=e)}let I=t[2*M],z=t[2*M+1],U=1/0;for(let i=0;i<c;i++){if(i===A||i===M)continue;const e=d(S,P,I,z,t[2*i],t[2*i+1]);e<U&&(k=i,U=e)}let F=t[2*k],K=t[2*k+1];if(U===1/0){for(let i=0;i<c;i++)this._dists[i]=t[2*i]-t[0]||t[2*i+1]-t[1];y(this._ids,this._dists,0,c-1);const e=new Uint32Array(c);let n=0;for(let i=0,t=-1/0;i<c;i++){const h=this._ids[i];this._dists[h]>t&&(e[n++]=h,t=this._dists[h])}return this.hull=e.subarray(0,n),this.triangles=new Uint32Array(0),void(this.halfedges=new Uint32Array(0))}if(_(S,P,I,z,F,K)){const i=M,t=I,e=z;M=k,I=F,z=K,k=i,F=t,K=e}const L=function(t,e,n,h,l,r){const o=n-t,c=h-e,_=l-t,f=r-e,d=o*o+c*c,y=_*_+f*f,m=.5/(o*f-c*_);return{x:t+(f*d-c*y)*m,y:e+(o*y-_*d)*m}}(S,P,I,z,F,K);this._cx=L.x,this._cy=L.y;for(let i=0;i<c;i++)this._dists[i]=o(t[2*i],t[2*i+1],L.x,L.y);y(this._ids,this._dists,0,c-1),this._hullStart=A;let H=3;n[A]=e[k]=M,n[M]=e[A]=k,n[k]=e[M]=A,l[A]=0,l[M]=1,l[k]=2,r.fill(-1),r[this._hashKey(S,P)]=A,r[this._hashKey(I,z)]=M,r[this._hashKey(F,K)]=k,this.trianglesLen=0,this._addTriangle(A,M,k,-1,-1,-1);for(let o,c,f=0;f<this._ids.length;f++){const i=this._ids[f],d=t[2*i],y=t[2*i+1];if(f>0&&Math.abs(d-o)<=h&&Math.abs(y-c)<=h)continue;if(o=d,c=y,i===A||i===M||i===k)continue;let m=0;for(let t=0,e=this._hashKey(d,y);t<this._hashSize&&(m=r[(e+t)%this._hashSize],-1===m||m===n[m]);t++);m=e[m];let q,x=m;for(;q=n[x],!_(d,y,t[2*x],t[2*x+1],t[2*q],t[2*q+1]);)if(x=q,x===m){x=-1;break}if(-1===x)continue;let w=this._addTriangle(x,i,n[x],-1,-1,l[x]);l[i]=this._legalize(w+2),l[x]=w,H++;let v=n[x];for(;q=n[v],_(d,y,t[2*v],t[2*v+1],t[2*q],t[2*q+1]);)w=this._addTriangle(v,i,q,l[i],-1,l[v]),l[i]=this._legalize(w+2),n[v]=v,H--,v=q;if(x===m)for(;q=e[x],_(d,y,t[2*q],t[2*q+1],t[2*x],t[2*x+1]);)w=this._addTriangle(q,i,x,-1,l[x],l[q]),this._legalize(w+2),l[q]=w,n[x]=x,H--,x=q;this._hullStart=e[i]=x,n[x]=e[v]=i,n[i]=v,r[this._hashKey(d,y)]=i,r[this._hashKey(t[2*x],t[2*x+1])]=x}this.hull=new Uint32Array(H);for(let i=0,t=this._hullStart;i<H;i++)this.hull[i]=t,t=n[t];this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(t,e){return Math.floor(function(t,e){const p=t/(Math.abs(t)+Math.abs(e));return(e>0?3-p:1+p)/4}(t-this._cx,e-this._cy)*this._hashSize)%this._hashSize}_legalize(a){const{_triangles:t,_halfedges:e,coords:n}=this;let i=0,h=0;for(;;){const b=e[a],r=a-a%3;if(h=r+(a+2)%3,-1===b){if(0===i)break;a=l[--i];continue}const o=b-b%3,c=r+(a+1)%3,_=o+(b+2)%3,d=t[h],y=t[a],m=t[c],x=t[_];if(f(n[2*d],n[2*d+1],n[2*y],n[2*y+1],n[2*m],n[2*m+1],n[2*x],n[2*x+1])){t[a]=x,t[b]=d;const n=e[_];if(-1===n){let t=this._hullStart;do{if(this._hullTri[t]===_){this._hullTri[t]=a;break}t=this._hullPrev[t]}while(t!==this._hullStart)}this._link(a,n),this._link(b,e[h]),this._link(h,_);const br=o+(b+1)%3;i<l.length&&(l[i++]=br)}else{if(0===i)break;a=l[--i]}}return h}_link(a,b){this._halfedges[a]=b,-1!==b&&(this._halfedges[b]=a)}_addTriangle(t,e,n,a,b,h){const l=this.trianglesLen;return this._triangles[l]=t,this._triangles[l+1]=e,this._triangles[l+2]=n,this._link(l,a),this._link(l+1,b),this._link(l+2,h),this.trianglesLen+=3,l}}function o(t,e,n,h){const l=t-n,r=e-h;return l*l+r*r}function c(t,e,n,h,l,r){const o=(h-e)*(l-t),c=(n-t)*(r-e);return Math.abs(o-c)>=33306690738754716e-32*Math.abs(o+c)?o-c:0}function _(t,e,n,h,l,r){return(c(l,r,t,e,n,h)||c(t,e,n,h,l,r)||c(n,h,l,r,t,e))<0}function f(t,e,n,h,l,r,o,c){const _=t-o,f=e-c,d=n-o,y=h-c,m=l-o,x=r-c,w=d*d+y*y,v=m*m+x*x;return _*(y*v-w*x)-f*(d*v-w*m)+(_*_+f*f)*(d*x-y*m)<0}function d(t,e,n,h,l,r){const o=n-t,c=h-e,_=l-t,f=r-e,d=o*o+c*c,y=_*_+f*f,m=.5/(o*f-c*_),x=(f*d-c*y)*m,w=(o*y-_*d)*m;return x*x+w*w}function y(t,e,n,h){if(h-n<=20)for(let i=n+1;i<=h;i++){const h=t[i],l=e[h];let r=i-1;for(;r>=n&&e[t[r]]>l;)t[r+1]=t[r--];t[r+1]=h}else{let i=n+1,l=h;m(t,n+h>>1,i),e[t[n]]>e[t[h]]&&m(t,n,h),e[t[i]]>e[t[h]]&&m(t,i,h),e[t[n]]>e[t[i]]&&m(t,n,i);const r=t[i],o=e[r];for(;;){do{i++}while(e[t[i]]<o);do{l--}while(e[t[l]]>o);if(l<i)break;m(t,i,l)}t[n+1]=t[l],t[l]=r,h-i+1>=l-n?(y(t,e,i,h),y(t,e,n,l-1)):(y(t,e,n,l-1),y(t,e,i,h))}}function m(t,i,e){const n=t[i];t[i]=t[e],t[e]=n}function x(p){return p[0]}function w(p){return p[1]}const v=1e-6;class T{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(t,e){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(t,e){this._+=`L${this._x1=+t},${this._y1=+e}`}arc(t,e,n){const h=(t=+t)+(n=+n),l=e=+e;if(n<0)throw new Error("negative radius");null===this._x1?this._+=`M${h},${l}`:(Math.abs(this._x1-h)>v||Math.abs(this._y1-l)>v)&&(this._+="L"+h+","+l),n&&(this._+=`A${n},${n},0,1,1,${t-n},${e}A${n},${n},0,1,1,${this._x1=h},${this._y1=l}`)}rect(t,e,n,h){this._+=`M${this._x0=this._x1=+t},${this._y0=this._y1=+e}h${+n}v${+h}h${-n}Z`}value(){return this._||null}}class A{constructor(){this._=[]}moveTo(t,e){this._.push([t,e])}closePath(){this._.push(this._[0].slice())}lineTo(t,e){this._.push([t,e])}value(){return this._.length?this._:null}}class M{constructor(t,[e,n,h,l]=[0,0,960,500]){if(!((h=+h)>=(e=+e)&&(l=+l)>=(n=+n)))throw new Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(2*t.points.length),this.vectors=new Float64Array(2*t.points.length),this.xmax=h,this.xmin=e,this.ymax=l,this.ymin=n,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){const{delaunay:{points:t,hull:e,triangles:n},vectors:h}=this,l=this.circumcenters=this._circumcenters.subarray(0,n.length/3*2);for(let e,h,i=0,r=0,o=n.length;i<o;i+=3,r+=2){const o=2*n[i],c=2*n[i+1],_=2*n[i+2],f=t[o],d=t[o+1],y=t[c],m=t[c+1],x=t[_],w=t[_+1],v=y-f,T=m-d,A=x-f,M=w-d,k=v*v+T*T,$=A*A+M*M,S=2*(v*M-T*A);if(S)if(Math.abs(S)<1e-8)e=(f+x)/2,h=(d+w)/2;else{const t=1/S;e=f+(M*k-T*$)*t,h=d+(v*$-A*k)*t}else e=(f+x)/2-1e8*M,h=(d+w)/2+1e8*A;l[r]=e,l[r+1]=h}let r,o,c,_=e[e.length-1],f=4*_,d=t[2*_],y=t[2*_+1];h.fill(0);for(let i=0;i<e.length;++i)_=e[i],r=f,o=d,c=y,f=4*_,d=t[2*_],y=t[2*_+1],h[r+2]=h[f]=c-y,h[r+3]=h[f+1]=d-o}render(t){const e=null==t?t=new T:void 0,{delaunay:{halfedges:n,inedges:h,hull:l},circumcenters:r,vectors:o}=this;if(l.length<=1)return null;for(let i=0,e=n.length;i<e;++i){const e=n[i];if(e<i)continue;const h=2*Math.floor(i/3),l=2*Math.floor(e/3),o=r[h],c=r[h+1],_=r[l],f=r[l+1];this._renderSegment(o,c,_,f,t)}let c,h1=l[l.length-1];for(let i=0;i<l.length;++i){c=h1,h1=l[i];const e=2*Math.floor(h[h1]/3),n=r[e],_=r[e+1],f=4*c,p=this._project(n,_,o[f+2],o[f+3]);p&&this._renderSegment(n,_,p[0],p[1],t)}return e&&e.value()}renderBounds(t){const e=null==t?t=new T:void 0;return t.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),e&&e.value()}renderCell(i,t){const e=null==t?t=new T:void 0,n=this._clip(i);if(null===n||!n.length)return;t.moveTo(n[0],n[1]);let h=n.length;for(;n[0]===n[h-2]&&n[1]===n[h-1]&&h>1;)h-=2;for(let i=2;i<h;i+=2)n[i]===n[i-2]&&n[i+1]===n[i-1]||t.lineTo(n[i],n[i+1]);return t.closePath(),e&&e.value()}*cellPolygons(){const{delaunay:{points:t}}=this;for(let i=0,e=t.length/2;i<e;++i){const t=this.cellPolygon(i);t&&(t.index=i,yield t)}}cellPolygon(i){const polygon=new A;return this.renderCell(i,polygon),polygon.value()}_renderSegment(t,e,n,h,l){let r;const o=this._regioncode(t,e),c=this._regioncode(n,h);0===o&&0===c?(l.moveTo(t,e),l.lineTo(n,h)):(r=this._clipSegment(t,e,n,h,o,c))&&(l.moveTo(r[0],r[1]),l.lineTo(r[2],r[3]))}contains(i,t,e){return(t=+t)==t&&(e=+e)==e&&this.delaunay._step(i,t,e)===i}*neighbors(i){const t=this._clip(i);if(t)for(const e of this.delaunay.neighbors(i)){const n=this._clip(e);if(n)t:for(let h=0,li=t.length;h<li;h+=2)for(let l=0,r=n.length;l<r;l+=2)if(t[h]==n[l]&&t[h+1]==n[l+1]&&t[(h+2)%li]==n[(l+r-2)%r]&&t[(h+3)%li]==n[(l+r-1)%r]){yield e;break t}}}_cell(i){const{circumcenters:t,delaunay:{inedges:e,halfedges:n,triangles:h}}=this,l=e[i];if(-1===l)return null;const r=[];let o=l;do{const e=Math.floor(o/3);if(r.push(t[2*e],t[2*e+1]),o=o%3==2?o-2:o+1,h[o]!==i)break;o=n[o]}while(o!==l&&-1!==o);return r}_clip(i){if(0===i&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];const t=this._cell(i);if(null===t)return null;const{vectors:e}=this,n=4*i;return e[n]||e[n+1]?this._clipInfinite(i,t,e[n],e[n+1],e[n+2],e[n+3]):this._clipFinite(i,t)}_clipFinite(i,t){const e=t.length;let n,h,l,r,o,c=null,_=t[e-2],f=t[e-1],d=this._regioncode(_,f);for(let y=0;y<e;y+=2)if(n=_,h=f,_=t[y],f=t[y+1],l=d,d=this._regioncode(_,f),0===l&&0===d)r=o,o=0,c?c.push(_,f):c=[_,f];else{let t,e,y,m,x;if(0===l){if(null===(t=this._clipSegment(n,h,_,f,l,d)))continue;[e,y,m,x]=t}else{if(null===(t=this._clipSegment(_,f,n,h,d,l)))continue;[m,x,e,y]=t,r=o,o=this._edgecode(e,y),r&&o&&this._edge(i,r,o,c,c.length),c?c.push(e,y):c=[e,y]}r=o,o=this._edgecode(m,x),r&&o&&this._edge(i,r,o,c,c.length),c?c.push(m,x):c=[m,x]}if(c)r=o,o=this._edgecode(c[0],c[1]),r&&o&&this._edge(i,r,o,c,c.length);else if(this.contains(i,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return c}_clipSegment(t,e,n,h,l,r){for(;;){if(0===l&&0===r)return[t,e,n,h];if(l&r)return null;let o,c,_=l||r;8&_?(o=t+(n-t)*(this.ymax-e)/(h-e),c=this.ymax):4&_?(o=t+(n-t)*(this.ymin-e)/(h-e),c=this.ymin):2&_?(c=e+(h-e)*(this.xmax-t)/(n-t),o=this.xmax):(c=e+(h-e)*(this.xmin-t)/(n-t),o=this.xmin),l?(t=o,e=c,l=this._regioncode(t,e)):(n=o,h=c,r=this._regioncode(n,h))}}_clipInfinite(i,t,e,n,h,l){let p,r=Array.from(t);if((p=this._project(r[0],r[1],e,n))&&r.unshift(p[0],p[1]),(p=this._project(r[r.length-2],r[r.length-1],h,l))&&r.push(p[0],p[1]),r=this._clipFinite(i,r))for(let t,e=0,n=r.length,h=this._edgecode(r[n-2],r[n-1]);e<n;e+=2)t=h,h=this._edgecode(r[e],r[e+1]),t&&h&&(e=this._edge(i,t,h,r,e),n=r.length);else this.contains(i,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(r=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return r}_edge(i,t,e,n,h){for(;t!==e;){let e,l;switch(t){case 5:t=4;continue;case 4:t=6,e=this.xmax,l=this.ymin;break;case 6:t=2;continue;case 2:t=10,e=this.xmax,l=this.ymax;break;case 10:t=8;continue;case 8:t=9,e=this.xmin,l=this.ymax;break;case 9:t=1;continue;case 1:t=5,e=this.xmin,l=this.ymin}n[h]===e&&n[h+1]===l||!this.contains(i,e,l)||(n.splice(h,0,e,l),h+=2)}if(n.length>4)for(let i=0;i<n.length;i+=2){const t=(i+2)%n.length,e=(i+4)%n.length;(n[i]===n[t]&&n[t]===n[e]||n[i+1]===n[t+1]&&n[t+1]===n[e+1])&&(n.splice(t,2),i-=2)}return h}_project(t,e,n,h){let l,r,o,c=1/0;if(h<0){if(e<=this.ymin)return null;(l=(this.ymin-e)/h)<c&&(o=this.ymin,r=t+(c=l)*n)}else if(h>0){if(e>=this.ymax)return null;(l=(this.ymax-e)/h)<c&&(o=this.ymax,r=t+(c=l)*n)}if(n>0){if(t>=this.xmax)return null;(l=(this.xmax-t)/n)<c&&(r=this.xmax,o=e+(c=l)*h)}else if(n<0){if(t<=this.xmin)return null;(l=(this.xmin-t)/n)<c&&(r=this.xmin,o=e+(c=l)*h)}return[r,o]}_edgecode(t,e){return(t===this.xmin?1:t===this.xmax?2:0)|(e===this.ymin?4:e===this.ymax?8:0)}_regioncode(t,e){return(t<this.xmin?1:t>this.xmax?2:0)|(e<this.ymin?4:e>this.ymax?8:0)}}const k=2*Math.PI,$=Math.pow;function S(p){return p[0]}function P(p){return p[1]}function I(t,e,n){return[t+Math.sin(t+e)*n,e+Math.cos(t-e)*n]}class z{static from(t,e=S,n=P,h){return new z("length"in t?function(t,e,n,h){const l=t.length,r=new Float64Array(2*l);for(let i=0;i<l;++i){const p=t[i];r[2*i]=e.call(h,p,i,t),r[2*i+1]=n.call(h,p,i,t)}return r}(t,e,n,h):Float64Array.from(function*(t,e,n,h){let i=0;for(const p of t)yield e.call(h,p,i,t),yield n.call(h,p,i,t),++i}(t,e,n,h)))}constructor(t){this._delaunator=new r(t),this.inedges=new Int32Array(t.length/2),this._hullIndex=new Int32Array(t.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){const t=this._delaunator,e=this.points;if(t.hull&&t.hull.length>2&&function(t){const{triangles:e,coords:n}=t;for(let i=0;i<e.length;i+=3){const a=2*e[i],b=2*e[i+1],t=2*e[i+2];if((n[t]-n[a])*(n[b+1]-n[a+1])-(n[b]-n[a])*(n[t+1]-n[a+1])>1e-10)return!1}return!0}(t)){this.collinear=Int32Array.from({length:e.length/2},((t,i)=>i)).sort(((i,t)=>e[2*i]-e[2*t]||e[2*i+1]-e[2*t+1]));const t=this.collinear[0],n=this.collinear[this.collinear.length-1],h=[e[2*t],e[2*t+1],e[2*n],e[2*n+1]],l=1e-8*Math.hypot(h[3]-h[1],h[2]-h[0]);for(let i=0,t=e.length/2;i<t;++i){const p=I(e[2*i],e[2*i+1],l);e[2*i]=p[0],e[2*i+1]=p[1]}this._delaunator=new r(e)}else delete this.collinear;const n=this.halfedges=this._delaunator.halfedges,h=this.hull=this._delaunator.hull,l=this.triangles=this._delaunator.triangles,o=this.inedges.fill(-1),c=this._hullIndex.fill(-1);for(let t=0,e=n.length;t<e;++t){const p=l[t%3==2?t-2:t+1];-1!==n[t]&&-1!==o[p]||(o[p]=t)}for(let i=0,t=h.length;i<t;++i)c[h[i]]=i;h.length<=2&&h.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=h[0],this.triangles[1]=h[1],this.triangles[2]=h[1],o[h[0]]=1,2===h.length&&(o[h[1]]=0))}voronoi(t){return new M(this,t)}*neighbors(i){const{inedges:t,hull:e,_hullIndex:n,halfedges:h,triangles:l,collinear:r}=this;if(r){const t=r.indexOf(i);return t>0&&(yield r[t-1]),void(t<r.length-1&&(yield r[t+1]))}const o=t[i];if(-1===o)return;let c=o,_=-1;do{if(yield _=l[c],c=c%3==2?c-2:c+1,l[c]!==i)return;if(c=h[c],-1===c){const p=e[(n[i]+1)%e.length];return void(p!==_&&(yield p))}}while(c!==o)}find(t,e,i=0){if((t=+t)!=t||(e=+e)!=e)return-1;const n=i;let h;for(;(h=this._step(i,t,e))>=0&&h!==i&&h!==n;)i=h;return h}_step(i,t,e){const{inedges:n,hull:h,_hullIndex:l,halfedges:r,triangles:o,points:c}=this;if(-1===n[i]||!c.length)return(i+1)%(c.length>>1);let _=i,f=$(t-c[2*i],2)+$(e-c[2*i+1],2);const d=n[i];let y=d;do{let n=o[y];const dt=$(t-c[2*n],2)+$(e-c[2*n+1],2);if(dt<f&&(f=dt,_=n),y=y%3==2?y-2:y+1,o[y]!==i)break;if(y=r[y],-1===y){if(y=h[(l[i]+1)%h.length],y!==n&&$(t-c[2*y],2)+$(e-c[2*y+1],2)<f)return y;break}}while(y!==d);return _}render(t){const e=null==t?t=new T:void 0,{points:n,halfedges:h,triangles:l}=this;for(let i=0,e=h.length;i<e;++i){const e=h[i];if(e<i)continue;const r=2*l[i],o=2*l[e];t.moveTo(n[r],n[r+1]),t.lineTo(n[o],n[o+1])}return this.renderHull(t),e&&e.value()}renderPoints(t,e=2){const n=null==t?t=new T:void 0,{points:h}=this;for(let i=0,n=h.length;i<n;i+=2){const n=h[i],l=h[i+1];t.moveTo(n+e,l),t.arc(n,l,e,0,k)}return n&&n.value()}renderHull(t){const e=null==t?t=new T:void 0,{hull:n,points:h}=this,l=2*n[0],r=n.length;t.moveTo(h[l],h[l+1]);for(let i=1;i<r;++i){const e=2*n[i];t.lineTo(h[e],h[e+1])}return t.closePath(),e&&e.value()}hullPolygon(){const polygon=new A;return this.renderHull(polygon),polygon.value()}renderTriangle(i,t){const e=null==t?t=new T:void 0,{points:n,triangles:h}=this,l=2*h[i*=3],r=2*h[i+1],o=2*h[i+2];return t.moveTo(n[l],n[l+1]),t.lineTo(n[r],n[r+1]),t.lineTo(n[o],n[o+1]),t.closePath(),e&&e.value()}*trianglePolygons(){const{triangles:t}=this;for(let i=0,e=t.length/3;i<e;++i)yield this.trianglePolygon(i)}trianglePolygon(i){const polygon=new A;return this.renderTriangle(i,polygon),polygon.value()}}}}]);